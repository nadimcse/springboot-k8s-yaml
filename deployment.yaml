apiVersion: v1
data:
  application.yaml: |-
    {
      "appType": {
        "name": "spring-boot-k8",
        "group": "java"
      }
    }
kind: ConfigMap
metadata:
  name: spring-boot-k8s-config-appyaml
  namespace: test
---
apiVersion: v1
data:
  PORT: "8080"
  spring.cloud.config.enabled: "false"
  spring.cloud.kubernetes.config.enableApi: "false"
  spring.cloud.kubernetes.config.name: "spring-boot-k8s-config-appyaml"
  spring.cloud.kubernetes.config.namespace: "test"
  spring.cloud.kubernetes.config.paths: "/opt/etc/conf/application.yaml"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: spring-boot-k8s
  name: spring-boot-k8s-config
  namespace: test
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-k8s
  namespace: test
spec:
  selector:
    matchLabels:
      app: spring-boot-k8s
  replicas: 1
  progressDeadlineSeconds: 60
  template:
    metadata:
      labels:
        app: spring-boot-k8s
        namespace: test
    spec:
      containers:
        - name: spring-boot-k8s
          image: doc185174/springboot-k8s-example:latest
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: spring-boot-k8s-config
          ports:
            - containerPort: 8080
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - sleep 30
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            limits:
              cpu: "800m"
              memory: "800Mi"
            requests:
              cpu: "200m"
              memory: "600Mi"
          volumeMounts:
            - mountPath: /opt/etc/conf
              name: config-volume
      volumes:
        - configMap:
            name: spring-boot-k8s-config-appyaml
          name: config-volume
---
apiVersion: v1
kind: Service
metadata:
  name: springboot-k8s-svc
  namespace: test
spec:
  selector:
    app: spring-boot-k8s
  ports:
    - protocol: "TCP"
      port: 8080
      targetPort: 8080
  type: NodePort