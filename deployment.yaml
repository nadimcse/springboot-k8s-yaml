apiVersion: v1
kind: ServiceAccount
metadata:
  name: spring-boot-k8s-sa
  namespace: test
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spring-boot-k8s-sa-view
  namespace: test
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: spring-boot-k8s-sa-view
subjects:
  - kind: ServiceAccount
    name: spring-boot-k8s-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: spring-boot-k8s-sa-view
  namespace: test
rules:
  - apiGroups: [""]
    resources: ["pods","configmaps", "services"]
    verbs: ["get", "watch", "list"]
---
apiVersion: v1
data:
  application.properties: |-
    app-detail.name=spring-boot-k8
    app-detail.group=java
kind: ConfigMap
metadata:
  name: spring-boot-k8s-config-appyaml
  namespace: test
---
apiVersion: v1
data:
  PORT: "8080"
  spring.cloud.config.enabled: "true"
  spring.cloud.kubernetes.config.enabled: "true"
  spring.cloud.kubernetes.config.enableApi: "false"
  spring.cloud.kubernetes.config.name: "spring-boot-k8s-config-appyaml"
  spring.cloud.kubernetes.config.namespace: "test"
  spring.cloud.kubernetes.config.paths: "/opt/etc/conf/application.properties"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: spring-boot-k8s
  name: spring-boot-k8s-config
  namespace: test
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-k8s
  namespace: test
spec:
  selector:
    matchLabels:
      app: spring-boot-k8s
  replicas: 1
  progressDeadlineSeconds: 60
  template:
    metadata:
      labels:
        app: spring-boot-k8s
        namespace: test
    spec:
      containers:
      - name: spring-boot-k8s
        image: doc185174/springboot-k8s-example:2.0
        imagePullPolicy: IfNotPresent
        envFrom:
          - configMapRef:
              name: spring-boot-k8s-config
        ports:
          - containerPort: 8080
        lifecycle:
          preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - sleep 30
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          limits:
            cpu: "800m"
            memory: "800Mi"
          requests:
            cpu: "200m"
            memory: "600Mi"
        volumeMounts:
          - mountPath: /opt/etc/conf
            name: config-volume
      serviceAccount: spring-boot-k8s-sa
      serviceAccountName: spring-boot-k8s-sa
      volumes:
        - configMap:
            name: spring-boot-k8s-config-appyaml
          name: config-volume
---
apiVersion: v1
kind: Service
metadata:
  name: springboot-k8s-svc
  namespace: test
spec:
  selector:
    app: spring-boot-k8s
  ports:
    - protocol: "TCP"
      port: 8080
      targetPort: 8080
  type: NodePort